// <auto-generated />
using System;
using FormBuilderAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FormBuilderAPI.Models.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250601111255_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("FormBuilderAPI.Models.Domain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("FormBuilderAPI.Models.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConfigurationPath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FormNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("FormOwner")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FormOwnerDivision")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FormTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RevisedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("FormBuilderAPI.Models.Forms_Domains", b =>
                {
                    b.Property<int>("FormId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DomainId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("FormId", "DomainId");

                    b.HasIndex("DomainId");

                    b.ToTable("Forms_Domains");
                });

            modelBuilder.Entity("FormBuilderAPI.Models.Forms_Domains", b =>
                {
                    b.HasOne("FormBuilderAPI.Models.Domain", "Domain")
                        .WithMany("Forms_Domains")
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormBuilderAPI.Models.Form", "Form")
                        .WithMany("Forms_Domains")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domain");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("FormBuilderAPI.Models.Domain", b =>
                {
                    b.Navigation("Forms_Domains");
                });

            modelBuilder.Entity("FormBuilderAPI.Models.Form", b =>
                {
                    b.Navigation("Forms_Domains");
                });
#pragma warning restore 612, 618
        }
    }
}
